<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="App001ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="App001ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.practice2.Properties.Settings.GlobalReference.Default.App001ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmpTableAdapter" GeneratorDataComponentClassName="EmpTableAdapter" Name="Emp" UserDataComponentName="EmpTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="App001ConnectionString (Settings)" DbObjectName="App001.dbo.Emp" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Emp] WHERE (([Emp_ID] = @Original_Emp_ID) AND ((@IsNull_Emp_Name = 1 AND [Emp_Name] IS NULL) OR ([Emp_Name] = @Original_Emp_Name)) AND ((@IsNull_Emp_Salary = 1 AND [Emp_Salary] IS NULL) OR ([Emp_Salary] = @Original_Emp_Salary)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Emp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Emp_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Emp_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Emp_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Emp_Salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_Salary" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Emp_Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Emp_Salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Emp] ([Emp_ID], [Emp_Name], [Emp_Salary]) VALUES (@Emp_ID, @Emp_Name, @Emp_Salary);
SELECT Emp_ID, Emp_Name, Emp_Salary FROM Emp WHERE (Emp_ID = @Emp_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Emp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Emp_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Emp_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Emp_Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Emp_Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Emp.*
FROM            Emp</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Emp] SET [Emp_ID] = @Emp_ID, [Emp_Name] = @Emp_Name, [Emp_Salary] = @Emp_Salary WHERE (([Emp_ID] = @Original_Emp_ID) AND ((@IsNull_Emp_Name = 1 AND [Emp_Name] IS NULL) OR ([Emp_Name] = @Original_Emp_Name)) AND ((@IsNull_Emp_Salary = 1 AND [Emp_Salary] IS NULL) OR ([Emp_Salary] = @Original_Emp_Salary)));
SELECT Emp_ID, Emp_Name, Emp_Salary FROM Emp WHERE (Emp_ID = @Emp_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Emp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Emp_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Emp_Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Emp_Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Emp_Salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Emp_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Emp_Name" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_Name" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Emp_Name" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Emp_Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Emp_Salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Emp_Salary" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Emp_Salary" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Emp_Salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Emp_ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Emp_Name" DataSetColumn="Emp_Name" />
              <Mapping SourceColumn="Emp_Salary" DataSetColumn="Emp_Salary" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccounTableAdapter" GeneratorDataComponentClassName="AccounTableAdapter" Name="Accoun" UserDataComponentName="AccounTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="App001ConnectionString (Settings)" DbObjectName="App001.dbo.Accoun" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Accoun] WHERE (([Accoun_ID] = @Original_Accoun_ID) AND ((@IsNull_Cerdit_Debit = 1 AND [Cerdit_Debit] IS NULL) OR ([Cerdit_Debit] = @Original_Cerdit_Debit)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Accoun_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Accoun_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cerdit_Debit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cerdit_Debit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Cerdit_Debit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Cerdit_Debit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Accoun] ([Accoun_ID], [Cerdit_Debit]) VALUES (@Accoun_ID, @Cerdit_Debit);
SELECT Accoun_ID, Cerdit_Debit FROM Accoun WHERE (Accoun_ID = @Accoun_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Accoun_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Accoun_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Cerdit_Debit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Cerdit_Debit" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Accoun.*
FROM            Accoun</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Accoun] SET [Accoun_ID] = @Accoun_ID, [Cerdit_Debit] = @Cerdit_Debit WHERE (([Accoun_ID] = @Original_Accoun_ID) AND ((@IsNull_Cerdit_Debit = 1 AND [Cerdit_Debit] IS NULL) OR ([Cerdit_Debit] = @Original_Cerdit_Debit)));
SELECT Accoun_ID, Cerdit_Debit FROM Accoun WHERE (Accoun_ID = @Accoun_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Accoun_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Accoun_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Cerdit_Debit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Cerdit_Debit" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Accoun_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Accoun_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Cerdit_Debit" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cerdit_Debit" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Cerdit_Debit" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Cerdit_Debit" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Accoun_ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Cerdit_Debit" DataSetColumn="Cerdit_Debit" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EngiTableAdapter" GeneratorDataComponentClassName="EngiTableAdapter" Name="Engi" UserDataComponentName="EngiTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="App001ConnectionString (Settings)" DbObjectName="App001.dbo.Engi" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Engi] WHERE (([Eng_ID] = @Original_Eng_ID) AND ((@IsNull_Project = 1 AND [Project] IS NULL) OR ([Project] = @Original_Project)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Eng_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Eng_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Project" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Project" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Project" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Project" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Engi] ([Eng_ID], [Project]) VALUES (@Eng_ID, @Project);
SELECT Eng_ID, Project FROM Engi WHERE (Eng_ID = @Eng_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Eng_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Eng_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Project" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Project" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Engi.*
FROM            Engi</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Engi] SET [Eng_ID] = @Eng_ID, [Project] = @Project WHERE (([Eng_ID] = @Original_Eng_ID) AND ((@IsNull_Project = 1 AND [Project] IS NULL) OR ([Project] = @Original_Project)));
SELECT Eng_ID, Project FROM Engi WHERE (Eng_ID = @Eng_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Eng_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Eng_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Project" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Project" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Eng_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Eng_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Project" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Project" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Project" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Project" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Eng_ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Project" DataSetColumn="Project" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TechTableAdapter" GeneratorDataComponentClassName="TechTableAdapter" Name="Tech" UserDataComponentName="TechTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="App001ConnectionString (Settings)" DbObjectName="App001.dbo.Tech" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Tech] WHERE (([Tech_ID] = @Original_Tech_ID) AND ((@IsNull_Service = 1 AND [Service] IS NULL) OR ([Service] = @Original_Service)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Tech_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Tech_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Service" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Service" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Service" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Service" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Tech] ([Tech_ID], [Service]) VALUES (@Tech_ID, @Service);
SELECT Tech_ID, Service FROM Tech WHERE (Tech_ID = @Tech_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Tech_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Tech_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Service" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Service" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Tech.*
FROM            Tech</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Tech] SET [Tech_ID] = @Tech_ID, [Service] = @Service WHERE (([Tech_ID] = @Original_Tech_ID) AND ((@IsNull_Service = 1 AND [Service] IS NULL) OR ([Service] = @Original_Service)));
SELECT Tech_ID, Service FROM Tech WHERE (Tech_ID = @Tech_ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Tech_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Tech_ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Service" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Service" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Tech_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Tech_ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Service" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Service" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="StringFixedLength" Direction="Input" ParameterName="@Original_Service" Precision="0" ProviderType="NChar" Scale="0" Size="0" SourceColumn="Service" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Tech_ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Service" DataSetColumn="Service" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Emp" msprop:Generator_TableClassName="EmpDataTable" msprop:Generator_TableVarName="tableEmp" msprop:Generator_RowChangedName="EmpRowChanged" msprop:Generator_TablePropName="Emp" msprop:Generator_RowDeletingName="EmpRowDeleting" msprop:Generator_RowChangingName="EmpRowChanging" msprop:Generator_RowEvHandlerName="EmpRowChangeEventHandler" msprop:Generator_RowDeletedName="EmpRowDeleted" msprop:Generator_RowClassName="EmpRow" msprop:Generator_UserTableName="Emp" msprop:Generator_RowEvArgName="EmpRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Emp_Name" msprop:Generator_ColumnVarNameInTable="columnEmp_Name" msprop:Generator_ColumnPropNameInRow="Emp_Name" msprop:Generator_ColumnPropNameInTable="Emp_NameColumn" msprop:Generator_UserColumnName="Emp_Name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Emp_Salary" msprop:Generator_ColumnVarNameInTable="columnEmp_Salary" msprop:Generator_ColumnPropNameInRow="Emp_Salary" msprop:Generator_ColumnPropNameInTable="Emp_SalaryColumn" msprop:Generator_UserColumnName="Emp_Salary" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Accoun" msprop:Generator_TableClassName="AccounDataTable" msprop:Generator_TableVarName="tableAccoun" msprop:Generator_RowChangedName="AccounRowChanged" msprop:Generator_TablePropName="Accoun" msprop:Generator_RowDeletingName="AccounRowDeleting" msprop:Generator_RowChangingName="AccounRowChanging" msprop:Generator_RowEvHandlerName="AccounRowChangeEventHandler" msprop:Generator_RowDeletedName="AccounRowDeleted" msprop:Generator_RowClassName="AccounRow" msprop:Generator_UserTableName="Accoun" msprop:Generator_RowEvArgName="AccounRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Cerdit_Debit" msprop:Generator_ColumnVarNameInTable="columnCerdit_Debit" msprop:Generator_ColumnPropNameInRow="Cerdit_Debit" msprop:Generator_ColumnPropNameInTable="Cerdit_DebitColumn" msprop:Generator_UserColumnName="Cerdit_Debit" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Engi" msprop:Generator_TableClassName="EngiDataTable" msprop:Generator_TableVarName="tableEngi" msprop:Generator_RowChangedName="EngiRowChanged" msprop:Generator_TablePropName="Engi" msprop:Generator_RowDeletingName="EngiRowDeleting" msprop:Generator_RowChangingName="EngiRowChanging" msprop:Generator_RowEvHandlerName="EngiRowChangeEventHandler" msprop:Generator_RowDeletedName="EngiRowDeleted" msprop:Generator_RowClassName="EngiRow" msprop:Generator_UserTableName="Engi" msprop:Generator_RowEvArgName="EngiRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Project" msprop:Generator_ColumnVarNameInTable="columnProject" msprop:Generator_ColumnPropNameInRow="Project" msprop:Generator_ColumnPropNameInTable="ProjectColumn" msprop:Generator_UserColumnName="Project" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tech" msprop:Generator_TableClassName="TechDataTable" msprop:Generator_TableVarName="tableTech" msprop:Generator_RowChangedName="TechRowChanged" msprop:Generator_TablePropName="Tech" msprop:Generator_RowDeletingName="TechRowDeleting" msprop:Generator_RowChangingName="TechRowChanging" msprop:Generator_RowEvHandlerName="TechRowChangeEventHandler" msprop:Generator_RowDeletedName="TechRowDeleted" msprop:Generator_RowClassName="TechRow" msprop:Generator_UserTableName="Tech" msprop:Generator_RowEvArgName="TechRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Service" msprop:Generator_ColumnVarNameInTable="columnService" msprop:Generator_ColumnPropNameInRow="Service" msprop:Generator_ColumnPropNameInTable="ServiceColumn" msprop:Generator_UserColumnName="Service" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Emp" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Accoun_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Accoun" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Engi_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Engi" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Tech_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tech" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="Emp_Tech" msdata:parent="Emp" msdata:child="Tech" msdata:parentkey="ID" msdata:childkey="ID" msprop:Generator_UserChildTable="Tech" msprop:Generator_ChildPropName="GetTechRows" msprop:Generator_UserRelationName="Emp_Tech" msprop:Generator_RelationVarName="relationEmp_Tech" msprop:Generator_UserParentTable="Emp" msprop:Generator_ParentPropName="EmpRow" />
      <msdata:Relationship name="Emp_Engi" msdata:parent="Emp" msdata:child="Engi" msdata:parentkey="ID" msdata:childkey="ID" msprop:Generator_UserChildTable="Engi" msprop:Generator_ChildPropName="GetEngiRows" msprop:Generator_UserRelationName="Emp_Engi" msprop:Generator_RelationVarName="relationEmp_Engi" msprop:Generator_UserParentTable="Emp" msprop:Generator_ParentPropName="EmpRow" />
      <msdata:Relationship name="Emp_Accoun" msdata:parent="Emp" msdata:child="Accoun" msdata:parentkey="ID" msdata:childkey="ID" msprop:Generator_UserChildTable="Accoun" msprop:Generator_ChildPropName="GetAccounRows" msprop:Generator_UserRelationName="Emp_Accoun" msprop:Generator_RelationVarName="relationEmp_Accoun" msprop:Generator_UserParentTable="Emp" msprop:Generator_ParentPropName="EmpRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>